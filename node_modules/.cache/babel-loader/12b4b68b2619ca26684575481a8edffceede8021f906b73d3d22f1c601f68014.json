{"ast":null,"code":"export default {\n  name: \"Form\",\n  data() {\n    return {\n      Likebilitys: null,\n      Name: null,\n      Likebility: null,\n      Likebility_score: null,\n      Opinion: null\n    };\n  },\n  methods: {\n    async getLikes() {\n      const req = await fetch(\"http://localhost:3000/endpoint\");\n      const data = await req.json();\n      this.Likebilitys = data.likes;\n    },\n    async postLikes(e) {\n      e.preventDefault();\n      const data = {\n        Name: this.Name,\n        Likebility: this.selectedLikebility.likebility,\n        Likebility_score: this.selectedLikebility.likebility_score,\n        Opinion: this.Opinion\n      };\n      const dataJson = JSON.stringify();\n    }\n  },\n  mounted() {\n    this.getLikes();\n  }\n};","map":{"version":3,"names":["name","data","Likebilitys","Name","Likebility","Likebility_score","Opinion","methods","getLikes","req","fetch","json","likes","postLikes","e","preventDefault","selectedLikebility","likebility","likebility_score","dataJson","JSON","stringify","mounted"],"sources":["/home/danielrubioklein/project/src/components/Form.vue"],"sourcesContent":["<template> \n    <div>\n        <h1>Sua Opinião Sobre a Honey</h1>\n        <form id=\"form\" @submit=\"postLikes\">\n            <div class=\"input-container\">\n                <label for=\"name\">Nome</label>\n                <input type=\"text\" id=\"name\" name=\"name\" v-model=\"Name\" placeholder=\"Seu nome\">\n            </div>\n            <div class=\"input-container\">\n                <label for=\"like\">Você gosta da Honey?</label>\n                <select name=\"like\" id=\"like\" v-model=\"selectedLikebility\" >\n                    <option v-for=\"likebility in Likebilitys\" :key=\"likebility.id\" :value=\"likebility\">\n                    {{ likebility.likebility }}\n                    </option>\n                </select>\n\n            </div>\n            <div class=\"input-container\">\n                <label for=\"opinion\">Sua opinião</label>\n                <input type=\"text\" id=\"opinion\" name=\"opinon\" v-model=\"Opinion\" placeholder=\"Sua opinião\">\n            </div>\n            <input type=\"submit\" class=\"submit-button\" value=\"Enviar Opinião\">\n        </form>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"Form\",\n        data() {\n            return {\n                Likebilitys: null,\n                Name: null,\n                Likebility: null,\n                Likebility_score: null,\n                Opinion: null\n            }\n        },\n\n        methods: {\n            async getLikes() {\n\n                const req = await fetch(\"http://localhost:3000/endpoint\");\n                const data = await req.json();\n\n                this.Likebilitys = data.likes\n\n            },\n\n            async postLikes(e) {\n                e.preventDefault();\n\n                const data = {\n                    Name: this.Name,\n                    Likebility: this.selectedLikebility.likebility,\n                    Likebility_score: this.selectedLikebility.likebility_score,\n                    Opinion: this.Opinion\n                }\n\n            const dataJson = JSON.stringify()\n            }\n        },\n\n        mounted() {\n            this.getLikes();\n        }\n    }\n</script>\n\n<style scoped>\n\n    h1 {\n        font-size: 1.4em;\n        margin: 45px;\n    }\n\n    #form {\n        max-width: 400px;\n        margin: 0 auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .input-container {\n        display: flex;\n        flex-direction: column;\n    }\n\n    label {\n        margin-bottom: 20px;\n        margin-top: 20px;\n        font-weight: bold;\n        font-size: 0.9em;\n    }\n\n    input,select {\n        font-family: Arial, Helvetica, sans-serif;\n        height: 30px;\n        border-radius: 5px;\n        border: solid black 1px;\n        padding-left: 15px;\n    }\n\n    #opinion {\n        height: 300px;\n        font-family: Arial, Helvetica, sans-serif;\n\n        \n    }\n\n    .submit-button {\n        text-align: center;\n        margin-top: 40px;\n        align-self: center;\n        width: 300px;\n        height: 40px;\n        border: none;\n        margin-bottom: 40px;\n        border-radius: 15px;\n        background-color: rgb(105, 56, 0);\n        font-size: 0.9em;\n        color: white;\n        font-weight: bold;\n        transition: 0.5s;\n    }\n\n    .submit-button:hover {\n        width: 350px;\n        height: 50px;\n        font-size: 0.8em;\n    }\n\n</style>"],"mappings":"AA2BI,eAAe;EACXA,IAAI,EAAE,MAAM;EACZC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,IAAI;MACjBC,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,IAAI;MAChBC,gBAAgB,EAAE,IAAI;MACtBC,OAAO,EAAE;IACb;EACJ,CAAC;EAEDC,OAAO,EAAE;IACL,MAAMC,QAAQA,CAAA,EAAG;MAEb,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MACzD,MAAMT,IAAG,GAAI,MAAMQ,GAAG,CAACE,IAAI,CAAC,CAAC;MAE7B,IAAI,CAACT,WAAU,GAAID,IAAI,CAACW,KAAI;IAEhC,CAAC;IAED,MAAMC,SAASA,CAACC,CAAC,EAAE;MACfA,CAAC,CAACC,cAAc,CAAC,CAAC;MAElB,MAAMd,IAAG,GAAI;QACTE,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,UAAU,EAAE,IAAI,CAACY,kBAAkB,CAACC,UAAU;QAC9CZ,gBAAgB,EAAE,IAAI,CAACW,kBAAkB,CAACE,gBAAgB;QAC1DZ,OAAO,EAAE,IAAI,CAACA;MAClB;MAEJ,MAAMa,QAAO,GAAIC,IAAI,CAACC,SAAS,CAAC;IAChC;EACJ,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACd,QAAQ,CAAC,CAAC;EACnB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}